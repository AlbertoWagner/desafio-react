[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/api.js":"3","/app/src/Headers.js":"4","/app/src/Table/index.js":"5","/app/src/Modal/index.js":"6","/app/src/Forms/index.js":"7"},{"size":202,"mtime":1608475420060,"results":"8","hashOfConfig":"9"},{"size":496,"mtime":1608476405104,"results":"10","hashOfConfig":"9"},{"size":132,"mtime":1608995289816,"results":"11","hashOfConfig":"9"},{"size":945,"mtime":1608688179827,"results":"12","hashOfConfig":"9"},{"size":1488,"mtime":1608995426672,"results":"13","hashOfConfig":"9"},{"size":1463,"mtime":1608995296288,"results":"14","hashOfConfig":"9"},{"size":3153,"mtime":1608995336144,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"16360iz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/app/src/index.js",[],["33","34"],"/app/src/App.js",[],"/app/src/api.js",[],"/app/src/Headers.js",[],"/app/src/Table/index.js",[],"/app/src/Modal/index.js",["35","36"],"/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\nimport React, { useState } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader, FormGroup, Form } from 'reactstrap';\nimport  FormModal  from '../Forms/index'\n\n\nconst ModalFocusAfterClose = (props) => {\n    if (props.props){\n        var titulo_modal = \"Edita produto\"\n    }else{\n        var titulo_modal = \"Novo produto\"\n\n    }\n    var id = props.props\n\n    console.log('x',props.props)\n    const [open, setOpen] = useState(false);\n    const [focusAfterClose, setFocusAfterClose] = useState(true);\n\n    const toggle = () => setOpen(!open);\n    const handleSelectChange = ({target: { value }}) => {\n        setFocusAfterClose(JSON.parse(value));\n    }\n\n    return (\n        <div>\n            <Form inline onSubmit={(e) => e.preventDefault()}>\n                <FormGroup>\n\n                </FormGroup>\n                <Button color=\"success\"  onClick={toggle} size=\"sm\">{titulo_modal}</Button>{' '}\n\n            </Form>\n            <Modal returnFocusAfterClose={focusAfterClose} isOpen={open}>\n            <ModalHeader toggle={toggle}>{titulo_modal}</ModalHeader>\n\n                <ModalBody>\n                    <FormModal props={id} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={toggle}>Fechar</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n    )\n}\n\nexport default ModalFocusAfterClose;","/app/src/Forms/index.js",["37"],"import React from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport * as axios from 'axios';\nimport { ButtonToggle } from \"reactstrap\";\n\n\nclass FormModal extends React.Component {\n\n\n  componentDidMount = () => {\n    if(this.props.props){\n      axios.get('http://127.0.0.1:8000/produto/' + this.props.props + '/')\n      .then(res => {\n        this.setState({ nome: res.data.nome });\n        this.setState({ descricao: res.data.descricao });\n        this.setState({ valor: res.data.valor });\n\n\n      })\n      .catch(err => console.log(err))\n    }\n\n  }\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n\n      nome: '',\n      descricao: '',\n      valor: '',\n\n    }\n\n\n  };\n\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n\n\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const data = {\n      'nome': this.state.nome,\n      'descricao': this.state.descricao,\n      'valor': this.state.valor\n    };\n    if (this.props.props) {\n      axios({\n        method: 'put',\n        url: 'http://127.0.0.1:8000/produto/'+this.props.props+'/',\n        data: data,\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(function (response) {\n          //handle success\n          console.log(response);\n          window.location.reload();\n\n        })\n        .catch(function (response) {\n          //handle error\n          console.log(response);\n        });\n\n\n\n    } else {\n          axios({\n        method: 'POST',\n        url: 'http://127.0.0.1:8000/produto/',\n        data: data,\n        headers: { 'Content-Type': 'application/json' }\n      })\n        .then(function (response) {\n          //handle success\n          console.log(response);\n          window.location.reload();\n\n        })\n        .catch(function (response) {\n          //handle error\n          console.log(response);\n        });\n    }\n\n  }\n\n\n  render() {\n\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <FormGroup row>\n          <Label for=\"exampleEmail\" sm={2}>Nome</Label>\n          <Col sm={10}>\n            <Input type=\"text\" required=\"true\" name=\"nome\" id=\"exampleEmail\" value={this.state.nome} placeholder=\"Nome\" onChange={this.handleChange} />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label for=\"exampleText\" sm={2}>Descrição</Label>\n          <Col sm={10}>\n            <Input type=\"textarea\"  required=\"true\"  name=\"descricao\" id=\"exampleText\" placeholder=\"Descrição\" value={this.state.descricao} onChange={this.handleChange} />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleValue\" sm={2}>Valor</Label>\n          <Col sm={10}>\n            <Input type=\"number\"  required=\"true\" name=\"valor\" id=\"exampleValue\" placeholder=\"Valor\" value={this.state.valor} onChange={this.handleChange} />\n          </Col>\n        </FormGroup>\n        <FormGroup check row>\n          <Col sm={{ size: 10, offset: 2 }}>\n            <ButtonToggle type=\"submit\" >Salvar</ButtonToggle>\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default FormModal;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":12,"column":13,"nodeType":"44","messageId":"45","endLine":12,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":22,"column":11,"nodeType":"44","messageId":"48","endLine":22,"endColumn":29},{"ruleId":"46","severity":1,"message":"49","line":2,"column":15,"nodeType":"44","messageId":"48","endLine":2,"endColumn":21},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-redeclare","'titulo_modal' is already defined.","Identifier","redeclared","no-unused-vars","'handleSelectChange' is assigned a value but never used.","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]